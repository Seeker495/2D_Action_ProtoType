//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/InputActions/ControlActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlActions"",
    ""maps"": [
        {
            ""name"": ""Title"",
            ""id"": ""ec4a50a3-525a-4c08-a7bc-1763757e26a7"",
            ""actions"": [
                {
                    ""name"": ""EnterProcess"",
                    ""type"": ""Button"",
                    ""id"": ""adfa5bcd-8368-4458-a4de-d0e2a639dab2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectDown"",
                    ""type"": ""Button"",
                    ""id"": ""a3b43935-ac8e-4309-b96e-628f3eacee9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectUp"",
                    ""type"": ""Button"",
                    ""id"": ""1202fb5b-093f-41a6-9e55-5d2f252f44d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ad67c31f-194e-4b11-a64c-f99f0cdba4fa"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e05fd252-2e97-45a9-a715-de3955dae1a5"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a7433fd-792b-403a-80e4-b4f1c3f1ecab"",
                    ""path"": ""<XInputController>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34196164-88ad-4ffc-846d-0916971c5999"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef11ccfa-36fa-4b54-9398-3b4ffac39ea5"",
                    ""path"": ""<XInputController>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70eae772-8ffb-45fa-899f-f57ea89d83f1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51fe114c-672d-479e-a2f9-b69410cac3c2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnterProcess"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e25ee4b-26ca-4342-adbd-9f1f0712d650"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnterProcess"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15b5529d-c62c-421f-8651-3684c94bf533"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnterProcess"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ecd0b57-fbae-442a-96f0-e60a06f15846"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnterProcess"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Play"",
            ""id"": ""9992f1d9-35bc-4552-9a1d-d8dbb296dee5"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ac197ff4-b884-4c0a-9749-e6462bc1feda"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""274d78fc-d69b-4c21-8349-503c1b9fa0ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""3a997fb2-95d6-4715-a832-0a8aa427e133"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ChangeWeaponToLeft"",
                    ""type"": ""Button"",
                    ""id"": ""e80a4fb2-5efd-448c-b402-1a4e9ce8f276"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeaponToRight"",
                    ""type"": ""Button"",
                    ""id"": ""b507a8ad-7df2-4997-b9d5-61f468445de5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AdjustCameraDistance"",
                    ""type"": ""Button"",
                    ""id"": ""59d8f5bd-28e5-4bec-acbf-94ff1a7713c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Resurrection"",
                    ""type"": ""Button"",
                    ""id"": ""a1aed4fe-0771-4775-aa14-c209c820ba35"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HighSpeedMove"",
                    ""type"": ""Button"",
                    ""id"": ""78ce297b-685c-4b03-8247-83c8e2461fb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToPause"",
                    ""type"": ""Button"",
                    ""id"": ""f460dd48-f6ad-4207-a9cb-812f83ec68ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FullHeal"",
                    ""type"": ""Button"",
                    ""id"": ""6c51d834-3d8b-4745-b7e8-e7f87669bf9e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3accc23f-d890-409a-aa9f-34488ba44a9b"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""bce08562-8c45-4e06-b861-603316acd140"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""890b3903-029f-4d45-9e40-e60cdd441858"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""27b3e3da-de25-42ee-bd48-f22b7e44761e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""481ccb40-9e16-46c9-9247-17a418de1a9e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""248bda07-9685-4c69-9ca1-6ef791784323"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b9dace67-e02f-499a-a42f-29bbd1a80144"",
                    ""path"": ""<DualShockGamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8d41ac1-beaf-46ed-85fe-4bb5e4f83a35"",
                    ""path"": ""<DualShockGamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""760b068e-2453-4c25-ad6d-cc33714db3d2"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7322d0b2-3786-4b74-afeb-d810ecb64120"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b5eaf32-9a6b-4b11-b5c1-f5595fc828af"",
                    ""path"": ""<DualShockGamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc669abb-f2cd-4f83-ac5e-24aecd7d8d84"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb417392-a313-4d60-a2b9-fc13f66aaa57"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f5fc295-944a-4b57-afc5-214ec1ea5267"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""117d61b0-bcd6-4f16-8c7b-a71c50a8bd34"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChangeWeaponToLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e6b0bec-163f-4413-bad1-01ea3660ad8a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeWeaponToLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e1c7bad-ec23-4e41-965f-9904d76c5f81"",
                    ""path"": ""<DualShockGamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeWeaponToLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc46d239-cafb-4715-a1ac-d9cdaa00edb1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChangeWeaponToRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1108e67e-8453-493d-9069-e4e6ca25696b"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeaponToRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1b0baae-92d1-4138-8de7-856996bcf322"",
                    ""path"": ""<DualShockGamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeaponToRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8601ee8-bcb3-48c5-8d25-a0a68ce06ef8"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AdjustCameraDistance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd506478-52ff-4b73-ae4c-ba17ee266a06"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AdjustCameraDistance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bea38bb3-9610-4999-ae15-61001e60f5b9"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Resurrection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbbc6efe-62f8-4c7b-a724-74aab81be02b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HighSpeedMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50be43e7-c544-4af3-a010-92170ef62181"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""HighSpeedMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dac234a5-30d5-4b40-9ecf-b7956fedc800"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ToPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e893d79-0b35-4f17-9ef9-8d50eba70f40"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ToPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c824279d-22d6-4f74-a9d5-7a74df6a9b05"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FullHeal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Pause"",
            ""id"": ""3cdd13ae-d421-4477-a790-940fbf53b82c"",
            ""actions"": [
                {
                    ""name"": ""SelectLeft"",
                    ""type"": ""Button"",
                    ""id"": ""6f5043c5-8e09-45cc-8941-2ac22d4242aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectRight"",
                    ""type"": ""Button"",
                    ""id"": ""27a4f116-b685-4f87-be23-badac2c889f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""eadadfb7-b867-4502-8584-7cdf69d3c240"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e061ca19-4a99-483d-9c9b-4e15c6983781"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a6c1d7c-fde3-4762-86e3-bc022362b5b3"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19bd69e9-47be-4c99-8b3a-4fa16b728662"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a2ae7ba-8b07-42a9-b375-ca5b0196de59"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d927a0b6-e359-49b8-abcc-274358474cc3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69ab2dec-a803-4a4d-b56c-6e286bba6d3a"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fcf8ec5-7128-440f-9ca4-9ac1082eac1f"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48767579-d389-449d-a70f-108d5cc2376d"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Result"",
            ""id"": ""5f20e910-6aef-41c5-b7b7-2fe3777380b9"",
            ""actions"": [
                {
                    ""name"": ""BackToTitle"",
                    ""type"": ""Button"",
                    ""id"": ""b2f8dbd0-6d5a-48ff-b763-134abbfb91ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectLeftOnLevelUp"",
                    ""type"": ""Button"",
                    ""id"": ""cd2bb06f-309c-48d4-bd49-76590e35752b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectRightOnLevelUp"",
                    ""type"": ""Button"",
                    ""id"": ""5db71bf2-d43f-42fb-8f20-dab94565e34b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectUpOnEndLevelUp"",
                    ""type"": ""Button"",
                    ""id"": ""dc9a0689-8ad5-4978-974b-34daa980854d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectDownOnEndLevelUp"",
                    ""type"": ""Button"",
                    ""id"": ""41430055-c10c-478b-96e1-00bbdd9439c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ebef2b81-8a66-4b5b-8b06-4ee63bcf8e98"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackToTitle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba86533d-bfcd-406f-81f3-1bc9b305d895"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackToTitle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5dc5fdf-c60c-4daa-9ffc-7b0f7d87ba2d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectLeftOnLevelUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42a26536-a087-4699-9927-2a99da26713f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectRightOnLevelUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba9956dc-ee29-4185-81ca-9b5187416e3a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectUpOnEndLevelUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""487af185-d6dc-49b7-b58a-7e870ea89a08"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectDownOnEndLevelUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Title
        m_Title = asset.FindActionMap("Title", throwIfNotFound: true);
        m_Title_EnterProcess = m_Title.FindAction("EnterProcess", throwIfNotFound: true);
        m_Title_SelectDown = m_Title.FindAction("SelectDown", throwIfNotFound: true);
        m_Title_SelectUp = m_Title.FindAction("SelectUp", throwIfNotFound: true);
        // Play
        m_Play = asset.FindActionMap("Play", throwIfNotFound: true);
        m_Play_Move = m_Play.FindAction("Move", throwIfNotFound: true);
        m_Play_Attack = m_Play.FindAction("Attack", throwIfNotFound: true);
        m_Play_Dash = m_Play.FindAction("Dash", throwIfNotFound: true);
        m_Play_ChangeWeaponToLeft = m_Play.FindAction("ChangeWeaponToLeft", throwIfNotFound: true);
        m_Play_ChangeWeaponToRight = m_Play.FindAction("ChangeWeaponToRight", throwIfNotFound: true);
        m_Play_AdjustCameraDistance = m_Play.FindAction("AdjustCameraDistance", throwIfNotFound: true);
        m_Play_Resurrection = m_Play.FindAction("Resurrection", throwIfNotFound: true);
        m_Play_HighSpeedMove = m_Play.FindAction("HighSpeedMove", throwIfNotFound: true);
        m_Play_ToPause = m_Play.FindAction("ToPause", throwIfNotFound: true);
        m_Play_FullHeal = m_Play.FindAction("FullHeal", throwIfNotFound: true);
        // Pause
        m_Pause = asset.FindActionMap("Pause", throwIfNotFound: true);
        m_Pause_SelectLeft = m_Pause.FindAction("SelectLeft", throwIfNotFound: true);
        m_Pause_SelectRight = m_Pause.FindAction("SelectRight", throwIfNotFound: true);
        m_Pause_Enter = m_Pause.FindAction("Enter", throwIfNotFound: true);
        // Result
        m_Result = asset.FindActionMap("Result", throwIfNotFound: true);
        m_Result_BackToTitle = m_Result.FindAction("BackToTitle", throwIfNotFound: true);
        m_Result_SelectLeftOnLevelUp = m_Result.FindAction("SelectLeftOnLevelUp", throwIfNotFound: true);
        m_Result_SelectRightOnLevelUp = m_Result.FindAction("SelectRightOnLevelUp", throwIfNotFound: true);
        m_Result_SelectUpOnEndLevelUp = m_Result.FindAction("SelectUpOnEndLevelUp", throwIfNotFound: true);
        m_Result_SelectDownOnEndLevelUp = m_Result.FindAction("SelectDownOnEndLevelUp", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Title
    private readonly InputActionMap m_Title;
    private ITitleActions m_TitleActionsCallbackInterface;
    private readonly InputAction m_Title_EnterProcess;
    private readonly InputAction m_Title_SelectDown;
    private readonly InputAction m_Title_SelectUp;
    public struct TitleActions
    {
        private @ControlActions m_Wrapper;
        public TitleActions(@ControlActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @EnterProcess => m_Wrapper.m_Title_EnterProcess;
        public InputAction @SelectDown => m_Wrapper.m_Title_SelectDown;
        public InputAction @SelectUp => m_Wrapper.m_Title_SelectUp;
        public InputActionMap Get() { return m_Wrapper.m_Title; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TitleActions set) { return set.Get(); }
        public void SetCallbacks(ITitleActions instance)
        {
            if (m_Wrapper.m_TitleActionsCallbackInterface != null)
            {
                @EnterProcess.started -= m_Wrapper.m_TitleActionsCallbackInterface.OnEnterProcess;
                @EnterProcess.performed -= m_Wrapper.m_TitleActionsCallbackInterface.OnEnterProcess;
                @EnterProcess.canceled -= m_Wrapper.m_TitleActionsCallbackInterface.OnEnterProcess;
                @SelectDown.started -= m_Wrapper.m_TitleActionsCallbackInterface.OnSelectDown;
                @SelectDown.performed -= m_Wrapper.m_TitleActionsCallbackInterface.OnSelectDown;
                @SelectDown.canceled -= m_Wrapper.m_TitleActionsCallbackInterface.OnSelectDown;
                @SelectUp.started -= m_Wrapper.m_TitleActionsCallbackInterface.OnSelectUp;
                @SelectUp.performed -= m_Wrapper.m_TitleActionsCallbackInterface.OnSelectUp;
                @SelectUp.canceled -= m_Wrapper.m_TitleActionsCallbackInterface.OnSelectUp;
            }
            m_Wrapper.m_TitleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @EnterProcess.started += instance.OnEnterProcess;
                @EnterProcess.performed += instance.OnEnterProcess;
                @EnterProcess.canceled += instance.OnEnterProcess;
                @SelectDown.started += instance.OnSelectDown;
                @SelectDown.performed += instance.OnSelectDown;
                @SelectDown.canceled += instance.OnSelectDown;
                @SelectUp.started += instance.OnSelectUp;
                @SelectUp.performed += instance.OnSelectUp;
                @SelectUp.canceled += instance.OnSelectUp;
            }
        }
    }
    public TitleActions @Title => new TitleActions(this);

    // Play
    private readonly InputActionMap m_Play;
    private IPlayActions m_PlayActionsCallbackInterface;
    private readonly InputAction m_Play_Move;
    private readonly InputAction m_Play_Attack;
    private readonly InputAction m_Play_Dash;
    private readonly InputAction m_Play_ChangeWeaponToLeft;
    private readonly InputAction m_Play_ChangeWeaponToRight;
    private readonly InputAction m_Play_AdjustCameraDistance;
    private readonly InputAction m_Play_Resurrection;
    private readonly InputAction m_Play_HighSpeedMove;
    private readonly InputAction m_Play_ToPause;
    private readonly InputAction m_Play_FullHeal;
    public struct PlayActions
    {
        private @ControlActions m_Wrapper;
        public PlayActions(@ControlActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Play_Move;
        public InputAction @Attack => m_Wrapper.m_Play_Attack;
        public InputAction @Dash => m_Wrapper.m_Play_Dash;
        public InputAction @ChangeWeaponToLeft => m_Wrapper.m_Play_ChangeWeaponToLeft;
        public InputAction @ChangeWeaponToRight => m_Wrapper.m_Play_ChangeWeaponToRight;
        public InputAction @AdjustCameraDistance => m_Wrapper.m_Play_AdjustCameraDistance;
        public InputAction @Resurrection => m_Wrapper.m_Play_Resurrection;
        public InputAction @HighSpeedMove => m_Wrapper.m_Play_HighSpeedMove;
        public InputAction @ToPause => m_Wrapper.m_Play_ToPause;
        public InputAction @FullHeal => m_Wrapper.m_Play_FullHeal;
        public InputActionMap Get() { return m_Wrapper.m_Play; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayActions set) { return set.Get(); }
        public void SetCallbacks(IPlayActions instance)
        {
            if (m_Wrapper.m_PlayActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnMove;
                @Attack.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnAttack;
                @Dash.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnDash;
                @ChangeWeaponToLeft.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnChangeWeaponToLeft;
                @ChangeWeaponToLeft.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnChangeWeaponToLeft;
                @ChangeWeaponToLeft.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnChangeWeaponToLeft;
                @ChangeWeaponToRight.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnChangeWeaponToRight;
                @ChangeWeaponToRight.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnChangeWeaponToRight;
                @ChangeWeaponToRight.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnChangeWeaponToRight;
                @AdjustCameraDistance.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnAdjustCameraDistance;
                @AdjustCameraDistance.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnAdjustCameraDistance;
                @AdjustCameraDistance.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnAdjustCameraDistance;
                @Resurrection.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnResurrection;
                @Resurrection.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnResurrection;
                @Resurrection.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnResurrection;
                @HighSpeedMove.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnHighSpeedMove;
                @HighSpeedMove.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnHighSpeedMove;
                @HighSpeedMove.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnHighSpeedMove;
                @ToPause.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnToPause;
                @ToPause.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnToPause;
                @ToPause.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnToPause;
                @FullHeal.started -= m_Wrapper.m_PlayActionsCallbackInterface.OnFullHeal;
                @FullHeal.performed -= m_Wrapper.m_PlayActionsCallbackInterface.OnFullHeal;
                @FullHeal.canceled -= m_Wrapper.m_PlayActionsCallbackInterface.OnFullHeal;
            }
            m_Wrapper.m_PlayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @ChangeWeaponToLeft.started += instance.OnChangeWeaponToLeft;
                @ChangeWeaponToLeft.performed += instance.OnChangeWeaponToLeft;
                @ChangeWeaponToLeft.canceled += instance.OnChangeWeaponToLeft;
                @ChangeWeaponToRight.started += instance.OnChangeWeaponToRight;
                @ChangeWeaponToRight.performed += instance.OnChangeWeaponToRight;
                @ChangeWeaponToRight.canceled += instance.OnChangeWeaponToRight;
                @AdjustCameraDistance.started += instance.OnAdjustCameraDistance;
                @AdjustCameraDistance.performed += instance.OnAdjustCameraDistance;
                @AdjustCameraDistance.canceled += instance.OnAdjustCameraDistance;
                @Resurrection.started += instance.OnResurrection;
                @Resurrection.performed += instance.OnResurrection;
                @Resurrection.canceled += instance.OnResurrection;
                @HighSpeedMove.started += instance.OnHighSpeedMove;
                @HighSpeedMove.performed += instance.OnHighSpeedMove;
                @HighSpeedMove.canceled += instance.OnHighSpeedMove;
                @ToPause.started += instance.OnToPause;
                @ToPause.performed += instance.OnToPause;
                @ToPause.canceled += instance.OnToPause;
                @FullHeal.started += instance.OnFullHeal;
                @FullHeal.performed += instance.OnFullHeal;
                @FullHeal.canceled += instance.OnFullHeal;
            }
        }
    }
    public PlayActions @Play => new PlayActions(this);

    // Pause
    private readonly InputActionMap m_Pause;
    private IPauseActions m_PauseActionsCallbackInterface;
    private readonly InputAction m_Pause_SelectLeft;
    private readonly InputAction m_Pause_SelectRight;
    private readonly InputAction m_Pause_Enter;
    public struct PauseActions
    {
        private @ControlActions m_Wrapper;
        public PauseActions(@ControlActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectLeft => m_Wrapper.m_Pause_SelectLeft;
        public InputAction @SelectRight => m_Wrapper.m_Pause_SelectRight;
        public InputAction @Enter => m_Wrapper.m_Pause_Enter;
        public InputActionMap Get() { return m_Wrapper.m_Pause; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PauseActions set) { return set.Get(); }
        public void SetCallbacks(IPauseActions instance)
        {
            if (m_Wrapper.m_PauseActionsCallbackInterface != null)
            {
                @SelectLeft.started -= m_Wrapper.m_PauseActionsCallbackInterface.OnSelectLeft;
                @SelectLeft.performed -= m_Wrapper.m_PauseActionsCallbackInterface.OnSelectLeft;
                @SelectLeft.canceled -= m_Wrapper.m_PauseActionsCallbackInterface.OnSelectLeft;
                @SelectRight.started -= m_Wrapper.m_PauseActionsCallbackInterface.OnSelectRight;
                @SelectRight.performed -= m_Wrapper.m_PauseActionsCallbackInterface.OnSelectRight;
                @SelectRight.canceled -= m_Wrapper.m_PauseActionsCallbackInterface.OnSelectRight;
                @Enter.started -= m_Wrapper.m_PauseActionsCallbackInterface.OnEnter;
                @Enter.performed -= m_Wrapper.m_PauseActionsCallbackInterface.OnEnter;
                @Enter.canceled -= m_Wrapper.m_PauseActionsCallbackInterface.OnEnter;
            }
            m_Wrapper.m_PauseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SelectLeft.started += instance.OnSelectLeft;
                @SelectLeft.performed += instance.OnSelectLeft;
                @SelectLeft.canceled += instance.OnSelectLeft;
                @SelectRight.started += instance.OnSelectRight;
                @SelectRight.performed += instance.OnSelectRight;
                @SelectRight.canceled += instance.OnSelectRight;
                @Enter.started += instance.OnEnter;
                @Enter.performed += instance.OnEnter;
                @Enter.canceled += instance.OnEnter;
            }
        }
    }
    public PauseActions @Pause => new PauseActions(this);

    // Result
    private readonly InputActionMap m_Result;
    private IResultActions m_ResultActionsCallbackInterface;
    private readonly InputAction m_Result_BackToTitle;
    private readonly InputAction m_Result_SelectLeftOnLevelUp;
    private readonly InputAction m_Result_SelectRightOnLevelUp;
    private readonly InputAction m_Result_SelectUpOnEndLevelUp;
    private readonly InputAction m_Result_SelectDownOnEndLevelUp;
    public struct ResultActions
    {
        private @ControlActions m_Wrapper;
        public ResultActions(@ControlActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @BackToTitle => m_Wrapper.m_Result_BackToTitle;
        public InputAction @SelectLeftOnLevelUp => m_Wrapper.m_Result_SelectLeftOnLevelUp;
        public InputAction @SelectRightOnLevelUp => m_Wrapper.m_Result_SelectRightOnLevelUp;
        public InputAction @SelectUpOnEndLevelUp => m_Wrapper.m_Result_SelectUpOnEndLevelUp;
        public InputAction @SelectDownOnEndLevelUp => m_Wrapper.m_Result_SelectDownOnEndLevelUp;
        public InputActionMap Get() { return m_Wrapper.m_Result; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ResultActions set) { return set.Get(); }
        public void SetCallbacks(IResultActions instance)
        {
            if (m_Wrapper.m_ResultActionsCallbackInterface != null)
            {
                @BackToTitle.started -= m_Wrapper.m_ResultActionsCallbackInterface.OnBackToTitle;
                @BackToTitle.performed -= m_Wrapper.m_ResultActionsCallbackInterface.OnBackToTitle;
                @BackToTitle.canceled -= m_Wrapper.m_ResultActionsCallbackInterface.OnBackToTitle;
                @SelectLeftOnLevelUp.started -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectLeftOnLevelUp;
                @SelectLeftOnLevelUp.performed -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectLeftOnLevelUp;
                @SelectLeftOnLevelUp.canceled -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectLeftOnLevelUp;
                @SelectRightOnLevelUp.started -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectRightOnLevelUp;
                @SelectRightOnLevelUp.performed -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectRightOnLevelUp;
                @SelectRightOnLevelUp.canceled -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectRightOnLevelUp;
                @SelectUpOnEndLevelUp.started -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectUpOnEndLevelUp;
                @SelectUpOnEndLevelUp.performed -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectUpOnEndLevelUp;
                @SelectUpOnEndLevelUp.canceled -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectUpOnEndLevelUp;
                @SelectDownOnEndLevelUp.started -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectDownOnEndLevelUp;
                @SelectDownOnEndLevelUp.performed -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectDownOnEndLevelUp;
                @SelectDownOnEndLevelUp.canceled -= m_Wrapper.m_ResultActionsCallbackInterface.OnSelectDownOnEndLevelUp;
            }
            m_Wrapper.m_ResultActionsCallbackInterface = instance;
            if (instance != null)
            {
                @BackToTitle.started += instance.OnBackToTitle;
                @BackToTitle.performed += instance.OnBackToTitle;
                @BackToTitle.canceled += instance.OnBackToTitle;
                @SelectLeftOnLevelUp.started += instance.OnSelectLeftOnLevelUp;
                @SelectLeftOnLevelUp.performed += instance.OnSelectLeftOnLevelUp;
                @SelectLeftOnLevelUp.canceled += instance.OnSelectLeftOnLevelUp;
                @SelectRightOnLevelUp.started += instance.OnSelectRightOnLevelUp;
                @SelectRightOnLevelUp.performed += instance.OnSelectRightOnLevelUp;
                @SelectRightOnLevelUp.canceled += instance.OnSelectRightOnLevelUp;
                @SelectUpOnEndLevelUp.started += instance.OnSelectUpOnEndLevelUp;
                @SelectUpOnEndLevelUp.performed += instance.OnSelectUpOnEndLevelUp;
                @SelectUpOnEndLevelUp.canceled += instance.OnSelectUpOnEndLevelUp;
                @SelectDownOnEndLevelUp.started += instance.OnSelectDownOnEndLevelUp;
                @SelectDownOnEndLevelUp.performed += instance.OnSelectDownOnEndLevelUp;
                @SelectDownOnEndLevelUp.canceled += instance.OnSelectDownOnEndLevelUp;
            }
        }
    }
    public ResultActions @Result => new ResultActions(this);
    public interface ITitleActions
    {
        void OnEnterProcess(InputAction.CallbackContext context);
        void OnSelectDown(InputAction.CallbackContext context);
        void OnSelectUp(InputAction.CallbackContext context);
    }
    public interface IPlayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnChangeWeaponToLeft(InputAction.CallbackContext context);
        void OnChangeWeaponToRight(InputAction.CallbackContext context);
        void OnAdjustCameraDistance(InputAction.CallbackContext context);
        void OnResurrection(InputAction.CallbackContext context);
        void OnHighSpeedMove(InputAction.CallbackContext context);
        void OnToPause(InputAction.CallbackContext context);
        void OnFullHeal(InputAction.CallbackContext context);
    }
    public interface IPauseActions
    {
        void OnSelectLeft(InputAction.CallbackContext context);
        void OnSelectRight(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
    }
    public interface IResultActions
    {
        void OnBackToTitle(InputAction.CallbackContext context);
        void OnSelectLeftOnLevelUp(InputAction.CallbackContext context);
        void OnSelectRightOnLevelUp(InputAction.CallbackContext context);
        void OnSelectUpOnEndLevelUp(InputAction.CallbackContext context);
        void OnSelectDownOnEndLevelUp(InputAction.CallbackContext context);
    }
}
